from flask import Flask, jsonify
import ee
import datetime

app = Flask(__name__)

# Initialize GEE
SERVICE_ACCOUNT = 'your-service-account@your-project.iam.gserviceaccount.com'
KEY_FILE = 'path/to/service-account.json'
credentials = ee.ServiceAccountCredentials(SERVICE_ACCOUNT, KEY_FILE)
ee.Initialize(credentials)

@app.route('/get_tile')
def get_tile():
    end_date = datetime.date.today()
    start_date = end_date - datetime.timedelta(days=1)
    collection = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED') \
                    .filterDate(str(start_date), str(end_date)) \
                    .sort('CLOUDY_PIXEL_PERCENTAGE') \
                    .first()
    map_params = {'bands': ['B4','B3','B2'], 'min':0, 'max':3000}
    map_id_dict = collection.getMapId(map_params)
    tile_url = map_id_dict['tile_fetcher'].url_format
    return jsonify({'tile_url': tile_url})

if __name__ == '__main__':
    app.run(debug=True)
--

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>GEE OpenLayers Map</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol/ol.css">
  <script src="https://cdn.jsdelivr.net/npm/ol/ol.js"></script>
  <style>#map {width:100%;height:90vh;}</style>
</head>
<body>
  <div id="map"></div>
  <script>
    async function loadMap() {
      const response = await fetch('/get_tile');
      const data = await response.json();
      const map = new ol.Map({
        target: 'map',
        layers: [
          new ol.layer.Tile({source: new ol.source.OSM()}),
          new ol.layer.Tile({
            source: new ol.source.XYZ({url: data.tile_url})
          })
        ],
        view: new ol.View({
          center: ol.proj.fromLonLat([0,0]),
          zoom: 2
        })
      });
    }
    loadMap();
  </script>
</body>
</html>
