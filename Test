<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Sentinel-2 Viewer</title>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
<style>
/* --- Styles ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£ --- */
body { font-family: 'Inter', sans-serif; background: #0f172a; color: #e2e8f0; overflow: hidden; }
#map { height: 100vh; width: calc(100% - 420px); float: left; position: relative; }
#sidebar { width: 420px; height: 100vh; float: right; background: linear-gradient(135deg,#1e293b 0%,#0f172a 100%); overflow-y: auto; box-shadow:-4px 0 24px rgba(0,0,0,0.3); backdrop-filter: blur(10px);}
.section { padding: 24px 28px; border-bottom: 1px solid rgba(255,255,255,0.06);}
label{display:block;margin-bottom:8px;font-size:13px;color:#94a3b8;}
input[type="date"], input[type="number"]{width:100%;padding:12px 16px;margin-bottom:16px;background:rgba(255,255,255,0.05);border-radius:10px;color:#e2e8f0;border:1px solid rgba(255,255,255,0.1);}
button{width:100%;padding:14px 24px;background:linear-gradient(135deg,#3b82f6 0%,#2563eb 100%);border:none;border-radius:10px;color:white;font-size:15px;font-weight:600;cursor:pointer;margin-bottom:16px;}
.coord-display{background:rgba(59,130,246,0.1);border:1px solid rgba(59,130,246,0.2);border-radius:10px;padding:14px 16px;margin-bottom:20px;display:flex;justify-content:space-between;}
.coord-item{flex:1;}
.coord-label{font-size:11px;color:#94a3b8;margin-bottom:4px;text-transform:uppercase;}
.coord-val{font-size:15px;color:#60a5fa;font-weight:600;}
</style>
</head>
<body>
<div id="map"></div>
<div id="sidebar">

  <div class="section">
    <h2>üõ∞Ô∏è Sentinel-2 Viewer</h2>
  </div>

  <div class="section">
    <h3>Date Range</h3>
    <label>Start Date</label>
    <input type="date" id="start" value="2020-01-01">
    <label>End Date</label>
    <input type="date" id="end" value="2020-01-15">
    <button id="loadMap">üîç Load Satellite Imagery</button>
  </div>

  <div class="section">
    <h3>Mode Selection</h3>
    <label><input type="radio" name="mode" value="point" checked> Point Mode (1 ‡∏û‡∏¥‡∏Å‡∏±‡∏î)</label>
    <label><input type="radio" name="mode" value="area"> Area Mode (‡∏Ñ‡∏£‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà)</label>
  </div>

  <div class="section" id="pointSection">
    <h3>Point Selection</h3>
    <label>Latitude</label>
    <input type="number" id="lat" step="0.0001" placeholder="19.2000">
    <label>Longitude</label>
    <input type="number" id="lon" step="0.0001" placeholder="100.1000">
    <button id="getPixel">üìç Analyze Point</button>
  </div>

  <div class="section" id="areaSection" style="display:none;">
    <h3>Area Selection</h3>
    <p>‡∏ß‡∏≤‡∏î‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ñ‡πà‡∏≤‡πÅ‡∏™‡∏á</p>
    <button id="getArea">üìê Analyze Area</button>
  </div>

  <div class="section">
    <h3>Selected Location / Area</h3>
    <div class="coord-display">
      <div class="coord-item">
        <div class="coord-label">Latitude</div>
        <div class="coord-val" id="coordLat">-</div>
      </div>
      <div class="coord-item">
        <div class="coord-label">Longitude</div>
        <div class="coord-val" id="coordLon">-</div>
      </div>
    </div>
  </div>

  <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏™‡∏á, indices, AGB ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° -->

</div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-draw/dist/leaflet.draw.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet-draw/dist/leaflet.draw.css"/>

<script>
var map = L.map('map',{center:[19.2,100.1],zoom:10});
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

var s2layer = {}, marker, drawnItems = new L.FeatureGroup();
map.addLayer(drawnItems);

// --- Draw control ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Area Mode ---
var drawControl = new L.Control.Draw({
    draw: { polygon:false, circle:false, circlemarker:false, marker:false, polyline:false, rectangle:true },
    edit: { featureGroup: drawnItems }
});
map.addControl(drawControl);

// --- Toggle Mode ---
document.querySelectorAll('input[name="mode"]').forEach(el=>{
    el.addEventListener('change', e=>{
        if(e.target.value=='point'){ 
            document.getElementById('pointSection').style.display='block';
            document.getElementById('areaSection').style.display='none';
        } else {
            document.getElementById('pointSection').style.display='none';
            document.getElementById('areaSection').style.display='block';
        }
    });
});

// --- Load Map ---
document.getElementById('loadMap').onclick = async function(){
    let start = document.getElementById('start').value;
    let end   = document.getElementById('end').value;
    let resp = await fetch('/get_map',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({start,end})});
    let data = await resp.json();
    if(s2layer.sentinel){ map.removeLayer(s2layer.sentinel); map.removeLayer(s2layer.theos);}
    s2layer.sentinel = L.tileLayer(data.sentinel_url).addTo(map);
    s2layer.theos = L.tileLayer(data.theos_url);
};

// --- Point Mode Click / Button ---
function showMarker(lat,lon){
    if(marker) map.removeLayer(marker);
    marker = L.marker([lat,lon]).addTo(map);
}
document.getElementById('getPixel').onclick = async function(){
    let lat=parseFloat(document.getElementById('lat').value);
    let lon=parseFloat(document.getElementById('lon').value);
    let start=document.getElementById('start').value;
    let end=document.getElementById('end').value;
    showMarker(lat,lon);
    await fetchPixel(lat,lon,start,end);
}
map.on('click', async function(e){
    if(document.querySelector('input[name="mode"]:checked').value!='point') return;
    let lat=e.latlng.lat;
    let lon=e.latlng.lng;
    document.getElementById('lat').value=lat.toFixed(6);
    document.getElementById('lon').value=lon.toFixed(6);
    showMarker(lat,lon);
    await fetchPixel(lat,lon,document.getElementById('start').value,document.getElementById('end').value);
});

// --- Area Mode Draw ---
map.on(L.Draw.Event.CREATED,function(e){
    drawnItems.clearLayers();
    drawnItems.addLayer(e.layer);
});

// --- Analyze Area ---
document.getElementById('getArea').onclick=async function(){
    if(drawnItems.getLayers().length==0){ alert('Please draw a rectangle first!'); return; }
    let bounds = drawnItems.getLayers()[0].getBounds();
    let start = document.getElementById('start').value;
    let end = document.getElementById('end').value;

    // ‡∏™‡πà‡∏á bounds (lat/lon SW, NE) ‡πÑ‡∏õ server ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ñ‡πà‡∏≤
    let resp = await fetch('/get_area',{
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body:JSON.stringify({
            sw_lat: bounds.getSouthWest().lat,
            sw_lon: bounds.getSouthWest().lng,
            ne_lat: bounds.getNorthEast().lat,
            ne_lon: bounds.getNorthEast().lng,
            start, end
        })
    });
    let data = await resp.json();
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô sidebar ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô getPixel
    console.log(data); // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
};

// --- Fetch Pixel ---
async function fetchPixel(lat,lon,start,end){
    let resp = await fetch('/get_pixel',{
        method:'POST',headers:{'Content-Type':'application/json'},
        body:JSON.stringify({lat,lon,start,end})
    });
    let pixel = await resp.json();
    console.log(pixel);
}
</script>
</body>
</html>
