<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Sentinel-2 Viewer</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css"/>

<style>
  body { margin:0; font-family: Arial, sans-serif; background: #f5f5f5; }
  #map { height: 500px; width: 100%; }
  .controls { padding:10px; background: #fff; border-bottom: 1px solid #ccc; }
  .controls label { margin-right: 10px; }
  table { border-collapse: collapse; width: 100%; margin-top:10px; }
  th, td { border: 1px solid #ccc; padding:5px; text-align:center; }
  th { background: #eee; }
  button { padding:5px 10px; margin-right:5px; }
</style>
</head>
<body>

<div class="controls">
  <label>Start Date: <input type="date" id="start" value="2020-01-01"></label>
  <label>End Date: <input type="date" id="end" value="2020-01-15"></label>
  <button id="loadMap">Load Map</button>
  <button id="enableArea">Enable Area Mode</button>
  <button id="clearArea">Clear Area</button>
</div>

<div id="map"></div>

<div class="controls">
  <h3>Selected Data</h3>
  <table>
    <thead>
      <tr>
        <th>Source</th><th>Blue</th><th>Green</th><th>Red</th><th>NIR</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Pixel</td>
        <td id="blue">-</td>
        <td id="green">-</td>
        <td id="red">-</td>
        <td id="nir">-</td>
      </tr>
      <tr>
        <td>Field Reflectance</td>
        <td id="fblue">-</td>
        <td id="fgreen">-</td>
        <td id="fred">-</td>
        <td id="fnir">-</td>
      </tr>
    </tbody>
  </table>

  <h4>Vegetation Indices</h4>
  <table>
    <thead>
      <tr><th>NDVI</th><th>TNDVI</th><th>SR</th><th>SAVI</th><th>MSAVI2</th><th>AGB</th></tr>
    </thead>
    <tbody>
      <tr>
        <td id="ndvi">-</td>
        <td id="tndvi">-</td>
        <td id="sr">-</td>
        <td id="savi">-</td>
        <td id="msavi2">-</td>
        <td id="agb">-</td>
      </tr>
    </tbody>
  </table>
</div>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

<script>
let map = L.map('map').setView([19.2, 100.1], 10);
let osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution:'&copy;OSM'}).addTo(map);

let s2layer = {};
let marker;
let drawnItems = new L.FeatureGroup().addTo(map);
let drawControl = new L.Control.Draw({
  draw: { polygon:false, polyline:false, circle:false, marker:false, circlemarker:false,
    rectangle: { shapeOptions:{ color:'#60a5fa', weight:2 } } },
  edit: { featureGroup: drawnItems }
});
let areaEnabled = false;

// ---------------- Load Map ----------------
document.getElementById('loadMap').onclick = async function(){
  let start = document.getElementById('start').value;
  let end = document.getElementById('end').value;
  let resp = await fetch('/get_map', {
    method:'POST', headers:{'Content-Type':'application/json'},
    body: JSON.stringify({start,end})
  });
  let data = await resp.json();

  if(s2layer.sentinel){ map.removeLayer(s2layer.sentinel); map.removeLayer(s2layer.theos); }
  let sentinelLayer = L.tileLayer(data.sentinel_url).addTo(map);
  let theosLayer = L.tileLayer(data.theos_url);
  s2layer = {sentinel:sentinelLayer,theos:theosLayer};
};

// ---------------- Pixel Data ----------------
async function getPixelData(lat, lon, start, end){
  let resp = await fetch('/get_pixel', {
    method:'POST', headers:{'Content-Type':'application/json'},
    body: JSON.stringify({lat, lon, start, end})
  });
  let pixel = await resp.json();
  function fmt(v){ return v==null?'-':Number(v).toFixed(3); }

  document.getElementById('blue').innerText = fmt(pixel.B2);
  document.getElementById('green').innerText = fmt(pixel.B3);
  document.getElementById('red').innerText = fmt(pixel.B4);
  document.getElementById('nir').innerText = fmt(pixel.B8);

  if(pixel.field_reflectance){
    document.getElementById('fblue').innerText = fmt(pixel.field_reflectance.Blue);
    document.getElementById('fgreen').innerText = fmt(pixel.field_reflectance.Green);
    document.getElementById('fred').innerText = fmt(pixel.field_reflectance.Red);
    document.getElementById('fnir').innerText = fmt(pixel.field_reflectance.NIR);
  }

  if(pixel.indices){
    document.getElementById('ndvi').innerText = fmt(pixel.indices.NDVI);
    document.getElementById('tndvi').innerText = fmt(pixel.indices.TNDVI);
    document.getElementById('sr').innerText = fmt(pixel.indices.SR);
    document.getElementById('savi').innerText = fmt(pixel.indices.SAVI);
    document.getElementById('msavi2').innerText = fmt(pixel.indices.MSAVI2);
  }

  document.getElementById('agb').innerText = fmt(pixel.AGB);
}

// ---------------- Click on Map ----------------
map.on('click', async function(e){
  if(areaEnabled) return; // skip if area mode
  let lat = e.latlng.lat, lon = e.latlng.lng;
  let start = document.getElementById('start').value;
  let end = document.getElementById('end').value;
  if(marker) map.removeLayer(marker);
  marker = L.marker([lat,lon]).addTo(map);
  await getPixelData(lat, lon, start, end);
});

// ---------------- Area Mode ----------------
document.getElementById('enableArea').onclick = function(){
  if(!areaEnabled){
    map.addControl(drawControl);
    areaEnabled = true;
    alert("Draw a rectangle to select area. Average values will be calculated.");
  }
};

document.getElementById('clearArea').onclick = function(){
  drawnItems.clearLayers();
};

// Listen for area drawn
map.on(L.Draw.Event.CREATED, async function(event){
  if(!areaEnabled) return;
  drawnItems.addLayer(event.layer);
  let bounds = event.layer.getBounds();
  let sw = bounds.getSouthWest(), ne = bounds.getNorthEast();
  let start = document.getElementById('start').value;
  let end = document.getElementById('end').value;

  // call backend endpoint for area analysis
  let resp = await fetch('/get_pixel', {
    method:'POST',
    headers:{'Content-Type':'application/json'},
    body: JSON.stringify({
      area:{sw_lat:sw.lat, sw_lon:sw.lng, ne_lat:ne.lat, ne_lon:ne.lng},
      start, end
    })
  });
  let pixel = await resp.json();

  function fmt(v){ return v==null?'-':Number(v).toFixed(3); }

  document.getElementById('blue').innerText = fmt(pixel.B2);
  document.getElementById('green').innerText = fmt(pixel.B3);
  document.getElementById('red').innerText = fmt(pixel.B4);
  document.getElementById('nir').innerText = fmt(pixel.B8);

  if(pixel.field_reflectance){
    document.getElementById('fblue').innerText = fmt(pixel.field_reflectance.Blue);
    document.getElementById('fgreen').innerText = fmt(pixel.field_reflectance.Green);
    document.getElementById('fred').innerText = fmt(pixel.field_reflectance.Red);
    document.getElementById('fnir').innerText = fmt(pixel.field_reflectance.NIR);
  }

  if(pixel.indices){
    document.getElementById('ndvi').innerText = fmt(pixel.indices.NDVI);
    document.getElementById('tndvi').innerText = fmt(pixel.indices.TNDVI);
    document.getElementById('sr').innerText = fmt(pixel.indices.SR);
    document.getElementById('savi').innerText = fmt(pixel.indices.SAVI);
    document.getElementById('msavi2').innerText = fmt(pixel.indices.MSAVI2);
  }

  document.getElementById('agb').innerText = fmt(pixel.AGB);
});
</script>

</body>
</html>
