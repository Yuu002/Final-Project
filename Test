import rasterio
import numpy as np
from rasterio.mask import mask
from pyproj import Transformer
from shapely.geometry import box, mapping
import math

# ---------------- Metadata ----------------
gains = {
    "blue": 1.46853,
    "green": 1.50071,
    "red": 1.71019,
    "nir": 1.67119
}
biases = {
    "blue": 0.0,
    "green": 0.0,
    "red": 0.0,
    "nir": 0.0
}
sun_elevation = 44.344240  # degree

# ---------------- Function ----------------
def get_reflectance_from_rectangle(tif_file, lon, lat, width=10, height=12):
    with rasterio.open(tif_file) as src:
        # แปลงพิกัด (lon, lat WGS84) → CRS ของภาพ (UTM Zone 47N)
        transformer = Transformer.from_crs("EPSG:4326", src.crs, always_xy=True)
        x, y = transformer.transform(lon, lat)

        # สร้างกรอบสี่เหลี่ยมรอบพิกัด (10m x 12m)
        half_w, half_h = width/2, height/2
        rect = box(x - half_w, y - half_h, x + half_w, y + half_h)

        # ตัดภาพตาม polygon
        out_image, _ = mask(src, [mapping(rect)], crop=True)
        arr = out_image.astype(np.float32)

        # กำจัด nodata
        nod = src.nodata
        if nod is not None:
            mask_valid = arr != nod
        else:
            mask_valid = arr > 0

        # ค่าเฉลี่ย DN ต่อ band
        band_means = []
        for i in range(arr.shape[0]):
            valid = arr[i][mask_valid[i]]
            band_means.append(valid.mean() if valid.size > 0 else np.nan)

        # ชื่อแบนด์เรียงตาม DIMAP (Blue, Green, Red, NIR)
        band_names = ["blue", "green", "red", "nir"]

        # DN → Radiance (DN * Gain + Bias)
        radiance = {b: band_means[i] * gains[b] + biases[b] for i, b in enumerate(band_names)}

        # Radiance → TOA Reflectance
        toa_reflectance = {b: radiance[b] / math.sin(math.radians(sun_elevation)) for b in band_names}

        return band_means, radiance, toa_reflectance

# ---------------- Run ----------------
tif_file = "your_image.tif"
lon, lat = 99.31819, 18.11402  # พิกัด

dn_mean, radiance, reflectance = get_reflectance_from_rectangle(tif_file, lon, lat)

print("ค่าเฉลี่ย DN (10m x 12m):", dn_mean)
print("Radiance:", radiance)
print("TOA Reflectance:", reflectance)
