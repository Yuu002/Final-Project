import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPRegressor
import joblib

# -----------------------------
# 1. โหลดข้อมูล
# -----------------------------
data = pd.read_excel("/mnt/data/bands_extracted.xlsx")

# Features (Sentinel-2)
X = data[["Band1", "Band2", "Band3", "Band4"]].values
# Targets (Field reflectance)
y = data[["Blue (B1)", "Green (B2)", "Red (B3)", "NIR (B4)"]].values

# -----------------------------
# 2. Scaling
# -----------------------------
scaler_X = StandardScaler()
scaler_y = StandardScaler()

X_scaled = scaler_X.fit_transform(X)
y_scaled = scaler_y.fit_transform(y)

# -----------------------------
# 3. แบ่งข้อมูล Train / Test
# -----------------------------
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y_scaled, test_size=0.2, random_state=42
)

# -----------------------------
# 4. สร้าง MLP Regressor
# -----------------------------
mlp_model = MLPRegressor(
    hidden_layer_sizes=(128, 64, 32),
    activation='relu',
    solver='adam',
    max_iter=500,
    random_state=42,
    early_stopping=True,
    n_iter_no_change=30,
    verbose=True
)

# -----------------------------
# 5. Train
# -----------------------------
mlp_model.fit(X_train, y_train)

# -----------------------------
# 6. ประเมินผลเบื้องต้น
# -----------------------------
score = mlp_model.score(X_test, y_test)
print(f"R^2 on test set: {score:.4f}")

# -----------------------------
# 7. Save model และ scaler
# -----------------------------
joblib.dump(mlp_model, "mlp_model_1.pkl")
joblib.dump(scaler_X, "scaler_X_1.save")
joblib.dump(scaler_y, "scaler_y_1.save")

print("✅ Saved mlp_model_1.pkl, scaler_X_1.save, scaler_y_1.save")
