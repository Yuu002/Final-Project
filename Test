import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.optimizers import Adam
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# 1. โหลดข้อมูล
data = pd.read_excel("bands_sentinel_train.xlsx")

# สมมุติชื่อคอลัมน์ตามที่คุณอธิบาย
X = data[["Band1", "Band2", "Band3", "Band4"]].values  # Sentinel-2
y = data[["B1", "B2", "B3", "B4"]].values              # THEOS-1

# 2. แบ่งข้อมูล
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. สเกลค่า
scaler_X = MinMaxScaler()
scaler_y = MinMaxScaler()

X_train_scaled = scaler_X.fit_transform(X_train)
X_test_scaled = scaler_X.transform(X_test)

y_train_scaled = scaler_y.fit_transform(y_train)
y_test_scaled = scaler_y.transform(y_test)

# 4. สร้างโมเดล Deep Learning
model = Sequential([
    Dense(128, activation='relu', input_shape=(4,)),
    Dropout(0.2),
    Dense(64, activation='relu'),
    Dropout(0.2),
    Dense(32, activation='relu'),
    Dense(4, activation='sigmoid')  # 4 output bands
])

# 5. คอมไพล์โมเดล
model.compile(optimizer=Adam(learning_rate=0.001), loss='mse')

# 6. เทรนโมเดล
history = model.fit(X_train_scaled, y_train_scaled, epochs=200, batch_size=16, validation_split=0.2, verbose=1)

# 7. ประเมินผล
y_pred_scaled = model.predict(X_test_scaled)
y_pred = scaler_y.inverse_transform(y_pred_scaled)

rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f"RMSE: {rmse:.3f}")
print(f"R²: {r2:.3f}")
