# bands_indices.py
import rasterio
import numpy as np

def compute_bands_and_indices(raster_path, lat=None, lon=None, width_m=10, height_m=12):
    """
    raster_path: path ของไฟล์ภาพดาวเทียม
    lat, lon: ไม่ใช้ก็ได้ (สามารถใส่ None)
    width_m, height_m: ขนาดพื้นที่ (เมตร)
    
    คืนค่า:
        bands_dict: ค่าเฉลี่ยของแต่ละ band
        indices_dict: ค่าดัชนี NDVI, TNDVI, SR, SAVI, MSAVI2
    """
    with rasterio.open(raster_path) as src:
        bands_data = src.read()  # shape: (bands, rows, cols)

        # ถ้าให้ lat/lon, สามารถทำเฉลี่ยรอบพื้นที่ได้ (ยังไม่ได้ใช้ในตอนนี้)
        # ตอนนี้คำนวณเฉลี่ยทั้งภาพ
        bands_mean = bands_data.reshape(bands_data.shape[0], -1).mean(axis=1)

        # จัด dictionary ของ bands (อัตโนมัติ)
        bands_dict = {f"Band_{i+1}": float(b) for i, b in enumerate(bands_mean)}

        # พยายามหาค่า Red และ NIR สำหรับดัชนี
        # สมมติ Band3 = Red, Band4 = NIR ถ้ามี
        try:
            R = bands_mean[2]
            NIR = bands_mean[3]
        except IndexError:
            # ถ้ามี bands น้อยกว่า 4 ใช้ Band1 = Red, Band2 = NIR
            R = bands_mean[0]
            NIR = bands_mean[1]

        L = 0.5
        # คำนวณดัชนี
        NDVI = (NIR - R) / (NIR + R + 1e-6)
        TNDVI = np.sqrt(NDVI + L)
        SR = NIR / (R + 1e-6)
        SAVI = ((1+L)*(NIR - R)) / (NIR + R + L + 1e-6)
        MSAVI2 = (2*NIR + 1 - np.sqrt((2*NIR + 1)**2 - 8*(NIR - R))) / 2

        indices_dict = {
            "NDVI": float(NDVI),
            "TNDVI": float(TNDVI),
            "SR": float(SR),
            "SAVI": float(SAVI),
            "MSAVI2": float(MSAVI2)
        }

        return bands_dict, indices_dict
