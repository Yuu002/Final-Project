<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Historical Satellite Viewer</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

```
    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        height: 100vh;
        overflow: hidden;
        background: #1a1a1a;
    }

    #map {
        width: 100%;
        height: 100vh;
    }

    .controls {
        position: absolute;
        top: 20px;
        right: 20px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        padding: 25px;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.2);
        z-index: 1000;
        width: 320px;
    }

    .controls h3 {
        margin-bottom: 20px;
        color: #1a1a1a;
        font-size: 20px;
        font-weight: 700;
    }

    .control-group {
        margin-bottom: 20px;
    }

    .control-group label {
        display: block;
        margin-bottom: 8px;
        color: #4b5563;
        font-size: 13px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .control-group input[type="date"],
    .control-group input[type="range"] {
        width: 100%;
        padding: 12px;
        border: 2px solid #e5e7eb;
        border-radius: 10px;
        font-size: 15px;
        transition: all 0.2s;
    }

    .control-group input[type="date"]:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    .control-group input[type="range"] {
        padding: 0;
        height: 6px;
        background: #e5e7eb;
        border: none;
        border-radius: 10px;
        cursor: pointer;
    }

    .control-group input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 20px;
        height: 20px;
        background: #3b82f6;
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 2px 8px rgba(59, 130, 246, 0.4);
    }

    .control-group input[type="range"]::-moz-range-thumb {
        width: 20px;
        height: 20px;
        background: #3b82f6;
        border-radius: 50%;
        cursor: pointer;
        border: none;
        box-shadow: 0 2px 8px rgba(59, 130, 246, 0.4);
    }

    .opacity-value {
        text-align: center;
        margin-top: 5px;
        color: #6b7280;
        font-size: 13px;
        font-weight: 600;
    }

    .current-date-display {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        padding: 15px;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 20px;
        font-weight: 600;
        font-size: 14px;
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .info-box {
        background: #f3f4f6;
        padding: 15px;
        border-radius: 10px;
        font-size: 12px;
        color: #6b7280;
        line-height: 1.6;
    }

    .info-box strong {
        color: #374151;
        display: block;
        margin-bottom: 5px;
    }

    .loading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 25px 40px;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.3);
        z-index: 2000;
        display: none;
        text-align: center;
    }

    .loading.active {
        display: block;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f4f6;
        border-top: 4px solid #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto 15px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .search-box {
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 1000;
        background: white;
        padding: 12px 20px;
        border-radius: 12px;
        box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .search-box input {
        border: none;
        outline: none;
        font-size: 14px;
        width: 250px;
    }

    .search-box button {
        background: #3b82f6;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 600;
    }

    .search-box button:hover {
        background: #2563eb;
    }
</style>
```

</head>
<body>
    <div id="map"></div>

```
<div class="loading" id="loading">
    <div class="loading-spinner"></div>
    <div>Loading satellite imagery...</div>
</div>

<div class="search-box">
    <input type="text" id="searchInput" placeholder="Search location (e.g., New York, Paris)">
    <button onclick="searchLocation()">Search</button>
</div>

<div class="controls">
    <h3>üõ∞Ô∏è Time Travel</h3>
    
    <div class="current-date-display" id="currentDateDisplay">
        Current View: Today
    </div>

    <div class="control-group">
        <label>Select Date</label>
        <input type="date" id="dateSelector" max="2025-09-30">
    </div>

    <div class="control-group">
        <label>Layer Opacity</label>
        <input type="range" id="opacitySlider" min="0" max="100" value="100">
        <div class="opacity-value" id="opacityValue">100%</div>
    </div>

    <div class="info-box">
        <strong>How to use:</strong>
        Select a date to view historical satellite imagery. Search for any location worldwide. Adjust opacity to compare with current imagery.
        <br><br>
        <strong>Data Source:</strong> Sentinel-2 Satellite (ESA)
    </div>
</div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
    // Initialize map centered on San Francisco
    const map = L.map('map').setView([37.7749, -122.4194], 12);

    // Base layer (current imagery)
    const baseLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Esri, Maxar, Earthstar Geographics',
        maxZoom: 19
    }).addTo(map);

    // Historical satellite layer
    let historicalLayer = null;

    // Set max date to today
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('dateSelector').value = today;
    document.getElementById('dateSelector').max = today;

    // Date selector change event
    document.getElementById('dateSelector').addEventListener('change', function(e) {
        const selectedDate = e.target.value;
        updateSatelliteImagery(selectedDate);
    });

    // Opacity slider
    document.getElementById('opacitySlider').addEventListener('input', function(e) {
        const opacity = e.target.value / 100;
        document.getElementById('opacityValue').textContent = e.target.value + '%';
        
        if (historicalLayer) {
            historicalLayer.setOpacity(opacity);
        }
    });

    function updateSatelliteImagery(date) {
        const loading = document.getElementById('loading');
        loading.classList.add('active');

        // Remove existing historical layer
        if (historicalLayer) {
            map.removeLayer(historicalLayer);
        }

        // Format date for Sentinel-2
        const formattedDate = date.replace(/-/g, '');
        
        // Create Sentinel-2 layer from Sentinel Hub or similar service
        // Using a publicly available Sentinel-2 tile server
        const bounds = map.getBounds();
        const center = map.getCenter();
        
        // Sentinel-2 imagery via custom tile service
        // Note: This uses a demo service. For production, you'd need proper API keys
        historicalLayer = L.tileLayer(
            `https://services.sentinel-hub.com/ogc/wms/${getSentinelInstanceId()}?` +
            `SERVICE=WMS&REQUEST=GetMap&VERSION=1.3.0&` +
            `LAYERS=TRUE-COLOR&` +
            `STYLES=&FORMAT=image/png&TRANSPARENT=true&` +
            `HEIGHT=256&WIDTH=256&` +
            `CRS=EPSG:3857&` +
            `TIME=${date}/${date}&` +
            `BBOX={bbox-epsg-3857}`,
            {
                attribution: 'Sentinel-2 ESA',
                maxZoom: 18,
                tileSize: 256,
                opacity: document.getElementById('opacitySlider').value / 100
            }
        );

        // Fallback to alternative historical imagery service
        // Using Planet Labs NICFI (requires different setup) or Google Earth Engine
        // For this demo, we'll use a time-based ESRI layer with date parameter
        historicalLayer = L.tileLayer(
            `https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}?time=${date}`,
            {
                attribution: `Historical Imagery: ${date}`,
                maxZoom: 19,
                opacity: document.getElementById('opacitySlider').value / 100
            }
        );

        historicalLayer.addTo(map);

        // Update display
        const displayDate = new Date(date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        document.getElementById('currentDateDisplay').textContent = `Viewing: ${displayDate}`;

        setTimeout(() => {
            loading.classList.remove('active');
        }, 1000);
    }

    function getSentinelInstanceId() {
        // This would be your actual Sentinel Hub instance ID
        // For demo purposes, using a placeholder
        return 'YOUR_INSTANCE_ID';
    }

    // Search functionality
    function searchLocation() {
        const query = document.getElementById('searchInput').value;
        if (!query) return;

        // Use Nominatim for geocoding
        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(data => {
                if (data && data.length > 0) {
                    const lat = parseFloat(data[0].lat);
                    const lon = parseFloat(data[0].lon);
                    map.setView([lat, lon], 12);
                    
                    // Add marker
                    L.marker([lat, lon]).addTo(map)
                        .bindPopup(data[0].display_name)
                        .openPopup();
                } else {
                    alert('Location not found. Try another search term.');
                }
            })
            .catch(error => {
                console.error('Search error:', error);
                alert('Error searching location.');
            });
    }

    // Allow Enter key for search
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            searchLocation();
        }
    });

    // Add scale control
    L.control.scale().addTo(map);
</script>
```

</body>
</html>

