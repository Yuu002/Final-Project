import rasterio
import numpy as np
from rasterio.mask import mask
from shapely.geometry import box, mapping
import fiona

# ---------------- Metadata ----------------
gains = {
    "blue": 1.46853,
    "green": 1.50071,
    "red": 1.71019,
    "nir": 1.67119
}
biases = {
    "blue": 0.0,
    "green": 0.0,
    "red": 0.0,
    "nir": 0.0
}

# ---------------- Function ----------------
def mean_dn_whole_plot(tif_file, shapefile_path=None):
    with rasterio.open(tif_file) as src:
        if shapefile_path is not None:
            # ใช้ shapefile mask
            with fiona.open(shapefile_path, "r") as shp:
                features = [feat["geometry"] for feat in shp]
            out_image, _ = mask(src, features, crop=False)
        else:
            # ถ้าไม่มี shapefile ใช้ทั้ง raster
            out_image = src.read()

        arr = out_image.astype(np.float32)

        # mask nodata
        nod = src.nodata
        if nod is not None:
            mask_valid = arr != nod
        else:
            mask_valid = arr > 0

        band_means = []
        for i in range(arr.shape[0]):
            valid = arr[i][mask_valid[i]]
            band_means.append(valid.mean() if valid.size > 0 else np.nan)

        # DN → Radiance
        band_names = ["blue", "green", "red", "nir"]
        radiance = {b: band_means[i]*gains[b] + biases[b] for i, b in enumerate(band_names)}

        return band_means, radiance

# ---------------- Run ----------------
tif_file = "your_image.tif"
shapefile_path = "plot.shp"  # หรือ None ถ้าไม่มี

dn_mean, radiance = mean_dn_whole_plot(tif_file, shapefile_path)

print("ค่าเฉลี่ย DN ทั้งแปลง:", dn_mean)
print("Radiance:", radiance)
