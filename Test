import rasterio
from rasterio.windows import from_bounds
from pyproj import Transformer
import numpy as np

# -----------------------------
# 1️⃣ พิกัดและ patch size
lat, lon = 18.11302, 99.31819
width_m, height_m = 12, 10

# 2️⃣ path to multiband THEOS image
img_path = "THEOS_multiband.tif"

# -----------------------------
# 3️⃣ Function ดึง patch DN จากพิกัด
def extract_patch_dn(img_path, lat, lon, width_m, height_m):
    with rasterio.open(img_path) as src:
        # แปลง lat/lon → CRS ของภาพ
        transformer = Transformer.from_crs("EPSG:4326", src.crs, always_xy=True)
        x, y = transformer.transform(lon, lat)
        
        # กำหนด bounding box รอบ patch
        half_w, half_h = width_m/2, height_m/2
        xmin, xmax = x-half_w, x+half_w
        ymin, ymax = y-half_h, y+half_h
        
        # สร้าง window
        window = from_bounds(xmin, ymin, xmax, ymax, transform=src.transform)
        patch = src.read(window=window).astype("float32")  # (bands,H,W)
        
        # กรอง nodata
        if src.nodata is not None:
            patch = np.where(patch == src.nodata, np.nan, patch)
        
        return patch

# -----------------------------
# 4️⃣ ดึง patch DN
patch_dn = extract_patch_dn(img_path, lat, lon, width_m, height_m)  # shape: (4,H,W)

# -----------------------------
# 5️⃣ คำนวณค่าเฉลี่ยของแต่ละ band
mean_dn = {
    'Blue': np.nanmean(patch_dn[0]),
    'Green': np.nanmean(patch_dn[1]),
    'Red': np.nanmean(patch_dn[2]),
    'NIR': np.nanmean(patch_dn[3])
}

# -----------------------------
# 6️⃣ คำนวณ vegetation indices (ใช้ DN โดยตรง)
blue, green, red, nir = patch_dn

ndvi = (nir - red) / (nir + red + 1e-8)
tndvi = (ndvi - np.nanmin(ndvi)) / (np.nanmax(ndvi) - np.nanmin(ndvi) + 1e-8)
sr = nir / (red + 1e-8)
L = 0.5
savi = ((nir - red) / (nir + red + L)) * (1 + L)
masvi2 = (nir - red) / (nir + red - blue + 1e-8)

indices = {
    'NDVI': np.nanmean(ndvi),
    'TNDVI': np.nanmean(tndvi),
    'SR': np.nanmean(sr),
    'SAVI': np.nanmean(savi),
    'MASVI2': np.nanmean(masvi2)
}

# -----------------------------
# 7️⃣ แสดงผล
print("Mean Spectral Bands (DN):", mean_dn)
print("Vegetation Indices:", indices)
