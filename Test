# app.py
import streamlit as st
from streamlit_folium import st_folium
import folium
from folium.plugins import Draw
import json
import datetime

st.set_page_config(layout="wide", page_title="Interactive Satellite Map with Date")

st.sidebar.title("Biomass Prediction Portal (Prototype)")
st.sidebar.markdown("เลือกวัน/เดือน/ปี เพื่อเปลี่ยนภาพดาวเทียม")

# --- Widget เลือกวัน/เดือน/ปี
date_selected = st.sidebar.date_input(
    "เลือกวันที่",
    datetime.date(2025, 1, 1)  # ค่าเริ่มต้น
)
date_str = date_selected.strftime("%Y-%m-%d")

# --- พิกัดเริ่มต้น
start_coords = (13.5, 100.5)  # Thailand
zoom_start = st.sidebar.slider("Zoom เริ่มต้น", 3, 12, 6)

# --- สร้าง folium map
m = folium.Map(location=start_coords, zoom_start=zoom_start, control_scale=True, tiles=None)

# --- เพิ่มชั้นภาพดาวเทียมจาก NASA GIBS (MODIS True Color)
# URL pattern: https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/MODIS_Terra_CorrectedReflectance_TrueColor/default/{date}/GoogleMapsCompatible_Level9/{z}/{y}/{x}.jpg
tile_url = f"https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/MODIS_Terra_CorrectedReflectance_TrueColor/default/{date_str}/GoogleMapsCompatible_Level9/{{z}}/{{y}}/{{x}}.jpg"

folium.TileLayer(
    tiles=tile_url,
    attr="NASA GIBS MODIS",
    name=f"MODIS TrueColor {date_str}",
    overlay=False,
    control=True,
).add_to(m)

# เพิ่ม OSM ไว้เลือกเปรียบเทียบ
folium.TileLayer("OpenStreetMap", name="OpenStreetMap").add_to(m)

# --- Layer control
folium.LayerControl().add_to(m)

# --- Draw tools
draw = Draw(
    export=True,
    filename='data.geojson',
    position="topleft",
    draw_options={
        'polyline': False,
        'rectangle': True,
        'polygon': True,
        'circle': False,
        'marker': False,
        'circlemarker': False,
    },
    edit_options={'edit': True}
)
draw.add_to(m)

# --- แสดงแผนที่
st.write(f"### แผนที่ — NASA MODIS True Color ({date_str})")
map_data = st_folium(m, width=1000, height=700)

# --- ผลลัพธ์การวาด
st.write("---")
st.write("### ผลการวาด / ข้อมูลพื้นที่ที่ได้")
if map_data and "all_drawings" in map_data and map_data["all_drawings"]:
    drawings = map_data["all_drawings"]
    st.success(f"พบ {len(drawings)} ไอเท็มที่วาด")
    for i, d in enumerate(drawings):
        st.write(f"**วัตถุที่ {i+1}**")
        st.json(d)
else:
    st.info("ยังไม่มีการวาดพื้นที่ — ใช้เครื่องมือวาดที่มุมบนซ้ายของแผนที่")
