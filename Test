<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Sentinel-2 Viewer</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
  <link rel="stylesheet" href="https://unpkg.com/leaflet-draw/dist/leaflet.draw.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* ===== ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ===== */
    *{margin:0;padding:0;box-sizing:border-box;}
    body{font-family:'Inter',sans-serif;background:#0f172a;color:#e2e8f0;overflow:hidden;}
    #map{height:100vh;width:calc(100% - 420px);float:left;}
    #sidebar{width:420px;height:100vh;float:right;background:linear-gradient(135deg,#1e293b 0%,#0f172a 100%);
      overflow-y:auto;box-shadow:-4px 0 24px rgba(0,0,0,0.3);backdrop-filter:blur(10px);}
    #sidebar::-webkit-scrollbar{width:8px;}
    #sidebar::-webkit-scrollbar-thumb{background:rgba(96,165,250,0.3);border-radius:4px;}
    .header{padding:32px 28px;background:linear-gradient(135deg,#3b82f6 0%,#2563eb 100%);}
    .header h1{font-size:28px;font-weight:700;color:white;margin-bottom:6px;}
    .section{padding:24px 28px;border-bottom:1px solid rgba(255,255,255,0.06);}
    .section-title{font-size:16px;font-weight:600;color:#60a5fa;margin-bottom:18px;}
    label{display:block;margin-bottom:8px;font-size:13px;font-weight:500;color:#94a3b8;text-transform:uppercase;}
    input[type="date"],input[type="number"],select{width:100%;padding:12px 16px;margin-bottom:16px;background:rgba(255,255,255,0.05);
      border:1px solid rgba(255,255,255,0.1);border-radius:10px;color:#e2e8f0;font-size:14px;}
    button{width:100%;padding:14px 24px;background:linear-gradient(135deg,#3b82f6 0%,#2563eb 100%);border:none;border-radius:10px;color:white;font-size:15px;font-weight:600;cursor:pointer;}
    .data-grid{display:grid;gap:12px;}
    .data-card{background:rgba(255,255,255,0.03);border:1px solid rgba(255,255,255,0.08);border-radius:10px;padding:14px 16px;}
    .data-value.highlight{color:#60a5fa;}
  </style>
</head>
<body>
  <div id="map"></div>
  <div id="sidebar">
    <div class="header">
      <h1>üõ∞Ô∏è Sentinel-2 Viewer</h1>
      <p>Earth Observation & Analysis Platform</p>
    </div>

    <!-- Mode Selector -->
    <div class="section">
      <div class="section-title">Mode Selection</div>
      <label>Select Analysis Mode</label>
      <select id="mode">
        <option value="point">üìç Analyze Point</option>
        <option value="polygon">üó∫Ô∏è Analyze Polygon</option>
      </select>
    </div>

    <div class="section">
      <div class="section-title">Date Range</div>
      <label>Start Date</label>
      <input type="date" id="start" value="2020-01-01">
      <label>End Date</label>
      <input type="date" id="end" value="2020-01-15">
      <button id="loadMap">üîç Load Satellite Imagery</button>
    </div>

    <!-- Point Section -->
    <div id="pointSection" class="section">
      <div class="section-title">Location Selection</div>
      <label>Latitude</label>
      <input type="number" id="lat" step="0.0001" placeholder="e.g., 19.2000">
      <label>Longitude</label>
      <input type="number" id="lon" step="0.0001" placeholder="e.g., 100.1000">
      <button id="getPixel">üìç Analyze Point</button>
    </div>

    <!-- Data Result Sections (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) -->
    <div class="section">
      <div class="section-title">Selected Location</div>
      <div class="data-grid">
        <div>Lat: <span id="coordLat">-</span></div>
        <div>Lon: <span id="coordLon">-</span></div>
      </div>
    </div>

    <div class="section">
      <div class="section-title">Reflectance & Indices</div>
      <div class="data-grid">
        <div>NDVI: <span id="ndvi">-</span></div>
        <div>AGB: <span id="agb">-</span></div>
      </div>
    </div>
  </div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://unpkg.com/leaflet-draw/dist/leaflet.draw.js"></script>
  <script>
    var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
    var map = L.map('map', {center: [19.2, 100.1], zoom: 10, layers: [osm]});
    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    var drawControl = new L.Control.Draw({
      draw: {
        polygon: true,
        rectangle: true,
        circle: false,
        marker: false,
        polyline: false,
      },
      edit: { featureGroup: drawnItems }
    });

    var currentMode = "point";
    var s2layer = {};
    var marker;

    document.getElementById("mode").addEventListener("change", function() {
      currentMode = this.value;
      if (currentMode === "polygon") {
        map.addControl(drawControl);
        document.getElementById("pointSection").style.display = "none";
      } else {
        map.removeControl(drawControl);
        document.getElementById("pointSection").style.display = "block";
      }
    });

    // Load map layers
    document.getElementById('loadMap').onclick = async function() {
      let start = document.getElementById('start').value;
      let end = document.getElementById('end').value;
      let resp = await fetch('/get_map', {
        method:'POST', headers:{'Content-Type':'application/json'},
        body: JSON.stringify({start, end})
      });
      let data = await resp.json();
      if(s2layer.sentinel) map.removeLayer(s2layer.sentinel);
      let sentinelLayer = L.tileLayer(data.sentinel_url);
      sentinelLayer.addTo(map);
      s2layer = { sentinel: sentinelLayer };
    };

    async function getPixelData(lat, lon, start, end){
      let resp = await fetch('/get_pixel', {
        method:'POST', headers:{'Content-Type':'application/json'},
        body: JSON.stringify({lat, lon, start, end})
      });
      let res = await resp.json();
      document.getElementById('coordLat').innerText = lat.toFixed(4);
      document.getElementById('coordLon').innerText = lon.toFixed(4);
      document.getElementById('ndvi').innerText = (res.indices?.NDVI ?? "-").toFixed(3);
      document.getElementById('agb').innerText = (res.AGB ?? "-").toFixed(3);
    }

    document.getElementById('getPixel').onclick = async function() {
      let lat = parseFloat(document.getElementById('lat').value);
      let lon = parseFloat(document.getElementById('lon').value);
      let start = document.getElementById('start').value;
      let end = document.getElementById('end').value;
      await getPixelData(lat, lon, start, end);
    };

    // Polygon draw handler
    map.on(L.Draw.Event.CREATED, async function (e) {
      if (currentMode !== "polygon") return;
      drawnItems.clearLayers();
      let layer = e.layer;
      drawnItems.addLayer(layer);
      let geojson = layer.toGeoJSON().geometry;

      let start = document.getElementById('start').value;
      let end = document.getElementById('end').value;

      let resp = await fetch('/get_area', {
        method: 'POST',
        headers: {'Content-Type':'application/json'},
        body: JSON.stringify({geometry: geojson, start, end})
      });
      let result = await resp.json();

      document.getElementById('coordLat').innerText = "Polygon";
      document.getElementById('coordLon').innerText = "-";
      document.getElementById('ndvi').innerText = (result.indices?.NDVI ?? "-").toFixed(3);
      document.getElementById('agb').innerText = (result.AGB ?? "-").toFixed(3);
    });
  </script>
</body>
</html>
