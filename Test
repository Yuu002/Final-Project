<div class="section">
  <div class="section-title">Area Selection</div>
  <p style="font-size:13px;color:#94a3b8;">üìå Drag a rectangle on map to select area</p>
  <button id="enableArea">üñåÔ∏è Enable Area Selection</button>
  <button id="clearArea">üßπ Clear Area</button>
</div>

// -------------------- Area Selection --------------------
var drawnItems = new L.FeatureGroup();
map.addLayer(drawnItems);

var drawControl = new L.Control.Draw({
  draw: {
    polygon: false,
    polyline: false,
    circle: false,
    marker: false,
    circlemarker: false,
    rectangle: {
      shapeOptions: {
        color: '#60a5fa',
        weight: 2
      }
    }
  },
  edit: {
    featureGroup: drawnItems
  }
});
var areaEnabled = false;

document.getElementById('enableArea').onclick = function() {
  if(!areaEnabled){
    map.addControl(drawControl);
    areaEnabled = true;
    alert("Draw a rectangle on map to select area. After drawing, data will be calculated.");
    // Hide single point coordinate fields
    document.querySelector('div.section-title:contains("Location Selection")').parentElement.style.display = 'none';
    document.querySelector('div.section-title:contains("Selected Location")').parentElement.style.display = 'none';
  }
};

document.getElementById('clearArea').onclick = function() {
  drawnItems.clearLayers();
};

// Listen for area drawn
map.on(L.Draw.Event.CREATED, async function (event) {
  var layer = event.layer;
  drawnItems.addLayer(layer);

  let bounds = layer.getBounds();
  let start = document.getElementById('start').value;
  let end = document.getElementById('end').value;

  // Prepare data for area average
  let sw = bounds.getSouthWest();
  let ne = bounds.getNorthEast();

  let resp = await fetch('/get_pixel', {
    method:'POST',
    headers:{'Content-Type':'application/json'},
    body: JSON.stringify({
      area: {
        sw_lat: sw.lat, sw_lon: sw.lng,
        ne_lat: ne.lat, ne_lon: ne.lng
      },
      start: start,
      end: end
    })
  });
  let pixel = await resp.json();

  function formatVal(val) {
    if (val == null || val == undefined) return '-';
    let num = Number(val);
    return num.toFixed(3);
  }

  // Hide coord display in area mode
  document.getElementById('coordLat').innerText = '-';
  document.getElementById('coordLon').innerText = '-';

  document.getElementById('red').innerText   = formatVal(pixel['B4']);
  document.getElementById('green').innerText = formatVal(pixel['B3']);
  document.getElementById('blue').innerText  = formatVal(pixel['B2']);
  document.getElementById('nir').innerText   = formatVal(pixel['B8']);

  if(pixel.field_reflectance){
    document.getElementById('fblue').innerText  = formatVal(pixel.field_reflectance.Blue);
    document.getElementById('fgreen').innerText = formatVal(pixel.field_reflectance.Green);
    document.getElementById('fred').innerText   = formatVal(pixel.field_reflectance.Red);
    document.getElementById('fnir').innerText   = formatVal(pixel.field_reflectance.NIR);
  }

  if(pixel.indices){
    document.getElementById('ndvi').innerText  = formatVal(pixel.indices.NDVI);
    document.getElementById('tndvi').innerText = formatVal(pixel.indices.TNDVI);
    document.getElementById('sr').innerText    = formatVal(pixel.indices.SR);
    document.getElementById('savi').innerText  = formatVal(pixel.indices.SAVI);
    document.getElementById('msavi2').innerText= formatVal(pixel.indices.MSAVI2);
  }

  document.getElementById('agb').innerText = formatVal(pixel.AGB);
});
