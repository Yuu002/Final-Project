<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <title>AGB Estimation Map</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <!-- Leaflet Draw -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

    <!-- Style -->
    <style>
        html, body { height: 100%; margin: 0; }
        #map { width: 100%; height: 100vh; }
        .leaflet-control-container .leaflet-bar a {
            background-color: #fff;
        }
        #info-box {
            position: absolute;
            top: 10px;
            right: 10px;
            background: white;
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
            z-index: 9999;
            width: 260px;
            max-height: 90vh;
            overflow-y: auto;
        }
        #info-box pre {
            font-size: 12px;
            background: #f8f8f8;
            padding: 6px;
            border-radius: 5px;
            overflow-x: auto;
        }
    </style>
</head>

<body>
<div id="map"></div>
<div id="info-box">
    <b>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏î</b><br>
    <button id="clear-btn">‡∏•‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</button>
    <hr>
    <div id="results">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>
</div>

<script>
    // -----------------------------
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
    // -----------------------------
    const map = L.map('map').setView([13.736, 100.523], 8);

    let sentinelLayer, theosLayer;

    // ‡πÇ‡∏´‡∏•‡∏î tile map ‡∏à‡∏≤‡∏Å backend
    fetch('/get_map', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            start: "2019-02-01",
            end: "2019-02-28"
        })
    })
    .then(res => res.json())
    .then(data => {
        sentinelLayer = L.tileLayer(data.sentinel_url, { attribution: 'Sentinel-2 SR' });
        theosLayer = L.tileLayer(data.theos_url, { attribution: 'THEOS-style DN' });
        sentinelLayer.addTo(map);

        L.control.layers({
            "Sentinel-2 SR": sentinelLayer,
            "THEOS-style DN": theosLayer
        }).addTo(map);
    });

    // -----------------------------
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏≤‡∏î
    // -----------------------------
    const drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    const drawControl = new L.Control.Draw({
        position: 'topleft',
        draw: {
            polygon: true,
            rectangle: true,
            circle: true,
            polyline: false,
            marker: false,
            circlemarker: false
        },
        edit: {
            featureGroup: drawnItems,
            remove: true
        }
    });
    map.addControl(drawControl);

    // -----------------------------
    // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    // -----------------------------
    map.on(L.Draw.Event.CREATED, function (event) {
        const layer = event.layer;
        drawnItems.addLayer(layer);

        let geojson = layer.toGeoJSON();
        let coords;

        // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö circle ‡∏î‡πâ‡∏ß‡∏¢ (‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô polygon)
        if (geojson.geometry.type === "Point" && layer.getRadius) {
            const circle = L.circle(layer.getLatLng(), { radius: layer.getRadius() });
            geojson = circle.toGeoJSON();
        }

        if (geojson.geometry.type === "Polygon") {
            coords = geojson.geometry.coordinates[0];
        } else {
            alert("‡πÇ‡∏õ‡∏£‡∏î‡∏ß‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô Polygon ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î‡∏Ç‡∏≠‡∏ö");
            return;
        }

        // ‡∏™‡πà‡∏á‡πÑ‡∏õ backend ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        fetch('/get_area', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                coords: coords,
                start: "2019-02-01",
                end: "2019-02-28"
            })
        })
        .then(res => res.json())
        .then(data => {
            console.log("Result:", data);
            document.getElementById("results").innerHTML = `
                <b>üìç ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</b><br>
                <pre>${JSON.stringify(data, null, 2)}</pre>
            `;
        })
        .catch(err => {
            console.error(err);
            document.getElementById("results").innerHTML = "<b style='color:red;'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</b>";
        });
    });

    // -----------------------------
    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
    // -----------------------------
    document.getElementById('clear-btn').onclick = function() {
        drawnItems.clearLayers();
        document.getElementById('results').innerHTML = "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•";
    };
</script>
</body>
</html>
